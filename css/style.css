/* universal selector * that gives each element default values */
/* include before and after selectors for defaults */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* border margin and paddings are inherited*/
  box-sizing: inherit; }

/* global setting for font-size -- use html selector */
html {
  /* set to a percentage so that user can change sizes (zoom and zoom out) */
  /* the default for most browsers is 16px -- divide by 10 * 100 gives us 62.5% */
  font-size: 62.5%; }

/* using inheritance to keep fonts consistent */
body {
  /* Google font Lato already included */
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  /* applying padding around the body */
  padding: 3rem;
  /* border margin and paddings no longer apply to total width and height of boxes*/
  box-sizing: border-box; }

footer {
  color: aqua; }

@keyframes moveInLeft {
  /* start = 0, complete = 100 */
  0% {
    opacity: 0;
    /* animate in the X direction (horizontal) */
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  /* start = 0, complete = 100 */
  0% {
    opacity: 0;
    /* animate in the X direction (horizontal) */
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  /* start = 0, complete = 100 */
  0% {
    opacity: 0;
    /* animate in the X direction (horizontal) */
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* determines if the back part is visible during animation -- prevents shaking in animation */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    /* These span elements are set to be inline naturally, so we need to change to block */
    display: block;
    font-size: 6rem;
    font-weight: 700;
    letter-spacing: 3.5rem;
    /* all you need to run an animation is name and duration, but there are lots more attributes */
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /* animation-iteration-count: 3; */
    /* animation-delay: 3s; */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    /* consolidate on 1 line */
    animation: moveInRight 1s ease-out; }

.btn {
  /* psuedoclass of the class is link, visited */
  /* another psuedo class */
  /* after psuedo element */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    /* padding top and bottom 15 and left and right 40 */
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    /* can list out all properties that can be animated and seconds it will take */
    transition: all 0.2s;
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-0.3rem);
    /* x shadow y shadow blur color */
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
    .btn:hover::after {
      /* scale multiplies size */
      transform: scaleX(1.4) scaleY(1.6);
      /* trick to fading out */
      opacity: 0; }
  .btn:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn::after {
    /* have to specify even if empty */
    content: "";
    display: inline-block;
    height: 100%;
    /* treated like a child of the button */
    width: 100%;
    border-radius: 10rem;
    /* reference is the first parent element with position relative */
    position: absolute;
    top: 0;
    left: 0;
    /* position of layers seen */
    z-index: -1;
    transition: all 0.4s; }
  .btn--animated {
    animation: moveInBottom 0.5s ease-out 0.75s;
    animation-fill-mode: backwards; }

.row {
  max-width: 114rem;
  background-color: red;
  margin: 0 auto; }

.header {
  height: 95vh;
  /* layering background w/2 imgs the linear gradient and the img */
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  /* designates where the image will crop when changing window sizes-- Top will keep the top of the img consistent */
  background-position: top;
  /* specified for child element logo-box */
  position: relative;
  /* The coordinates to create a polygon shape that will remain visible (moves clockwise starting top left) numbers are in view height*/
  clip-path: polygon(0 0, 100% 0%, 100% 75vh, 0 100%); }
  .header__logo-box {
    position: absolute;
    /* start counting top / left is parent element with position set to relative */
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /* shifting the element itself to the point specified by absolute positionS */
    transform: translate(-50%, -50%);
    text-align: center; }
